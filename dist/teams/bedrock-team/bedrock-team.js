"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BedrockTeam = void 0;
const team_1 = require("../team");
const iam_policy_1 = require("./iam-policy");
const iam = require("aws-cdk-lib/aws-iam");
/*
 *This class define the Team that can be used with `GenAIBuilder`
 *Sets IRSA for access to bedrock with required IAM policy along with creating a namespace.
*/
class BedrockTeam extends team_1.ApplicationTeam {
    /**
     * @public
     * @param {BedrockTeamProps} props the Bedrock team definition {@link BedrockTeamProps}
     */
    constructor(props) {
        super(props);
        this.bedrockTeam = props;
    }
    setupServiceAccount(clusterInfo) {
        super.setupServiceAccount(clusterInfo);
        // Apply IAM policy for Bedrock to the service account.
        (0, iam_policy_1.getBedrockPolicyDocument)().forEach((statement) => {
            this.serviceAccount.addToPrincipalPolicy(iam.PolicyStatement.fromJson(statement));
        });
    }
}
exports.BedrockTeam = BedrockTeam;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVkcm9jay10ZWFtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3RlYW1zL2JlZHJvY2stdGVhbS9iZWRyb2NrLXRlYW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0Esa0NBQXFEO0FBQ3JELDZDQUF3RDtBQUN4RCwyQ0FBMkM7QUFzQjNDOzs7RUFHRTtBQUVGLE1BQWEsV0FBWSxTQUFRLHNCQUFlO0lBRzlDOzs7T0FHRztJQUNILFlBQVksS0FBdUI7UUFDakMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2IsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQztJQUVTLG1CQUFtQixDQUFDLFdBQXdCO1FBRXBELEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN2Qyx1REFBdUQ7UUFDdkQsSUFBQSxxQ0FBd0IsR0FBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFO1lBQy9DLElBQUksQ0FBQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNwRixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQXBCRCxrQ0FvQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbHVzdGVySW5mbyB9IGZyb20gXCIuLi8uLi9zcGlcIjtcbmltcG9ydCB7IEFwcGxpY2F0aW9uVGVhbSwgVGVhbVByb3BzIH0gZnJvbSBcIi4uL3RlYW1cIjtcbmltcG9ydCB7IGdldEJlZHJvY2tQb2xpY3lEb2N1bWVudCB9IGZyb20gXCIuL2lhbS1wb2xpY3lcIjtcbmltcG9ydCAqIGFzIGlhbSBmcm9tIFwiYXdzLWNkay1saWIvYXdzLWlhbVwiO1xuXG4vKipcbiAqIEludGVyZmFjZSB0byBkZWZpbmUgYSBHZW5BSSBvbiBFS1MgdGVhbVxuICovXG5leHBvcnQgaW50ZXJmYWNlIEJlZHJvY2tUZWFtUHJvcHMgZXh0ZW5kcyBUZWFtUHJvcHMge1xuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIHNlcnZpY2UgYWNjb3VudCBuYW1lc3BhY2UuXG4gICAgICovXG4gICAgbmFtZXNwYWNlPzogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIE5hbWVzcGFjZSB3aXRoIHRoZSBwcm92aWRlZCBvbmUuXG4gICAgICovXG4gICAgY3JlYXRlTmFtZXNwYWNlPzogYm9vbGVhblxuXG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgc2VydmljZSBhY2NvdW50IGZvciBCZWRyb2NrLlxuICAgICAqL1xuICAgIHNlcnZpY2VBY2NvdW50TmFtZT86IHN0cmluZztcbn1cblxuLypcbiAqVGhpcyBjbGFzcyBkZWZpbmUgdGhlIFRlYW0gdGhhdCBjYW4gYmUgdXNlZCB3aXRoIGBHZW5BSUJ1aWxkZXJgXG4gKlNldHMgSVJTQSBmb3IgYWNjZXNzIHRvIGJlZHJvY2sgd2l0aCByZXF1aXJlZCBJQU0gcG9saWN5IGFsb25nIHdpdGggY3JlYXRpbmcgYSBuYW1lc3BhY2UuXG4qL1xuXG5leHBvcnQgY2xhc3MgQmVkcm9ja1RlYW0gZXh0ZW5kcyBBcHBsaWNhdGlvblRlYW0ge1xuXG4gIHByaXZhdGUgYmVkcm9ja1RlYW06IEJlZHJvY2tUZWFtUHJvcHM7XG4gIC8qKlxuICAgKiBAcHVibGljXG4gICAqIEBwYXJhbSB7QmVkcm9ja1RlYW1Qcm9wc30gcHJvcHMgdGhlIEJlZHJvY2sgdGVhbSBkZWZpbml0aW9uIHtAbGluayBCZWRyb2NrVGVhbVByb3BzfVxuICAgKi9cbiAgY29uc3RydWN0b3IocHJvcHM6IEJlZHJvY2tUZWFtUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5iZWRyb2NrVGVhbSA9IHByb3BzO1xuICB9XG5cbiAgcHJvdGVjdGVkIHNldHVwU2VydmljZUFjY291bnQoY2x1c3RlckluZm86IENsdXN0ZXJJbmZvKSB7XG5cbiAgICBzdXBlci5zZXR1cFNlcnZpY2VBY2NvdW50KGNsdXN0ZXJJbmZvKTtcbiAgICAvLyBBcHBseSBJQU0gcG9saWN5IGZvciBCZWRyb2NrIHRvIHRoZSBzZXJ2aWNlIGFjY291bnQuXG4gICAgZ2V0QmVkcm9ja1BvbGljeURvY3VtZW50KCkuZm9yRWFjaCgoc3RhdGVtZW50KSA9PiB7XG4gICAgICB0aGlzLnNlcnZpY2VBY2NvdW50LmFkZFRvUHJpbmNpcGFsUG9saWN5KGlhbS5Qb2xpY3lTdGF0ZW1lbnQuZnJvbUpzb24oc3RhdGVtZW50KSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==